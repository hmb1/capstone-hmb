import numpy as np
from icecream import ic

def load_function(idx, add=0,final=False):
    X = np.load(f'function_{idx}/initial_inputs.npy')
    y = np.load(f'function_{idx}/initial_outputs.npy')

    Xf = np.load(f'final_data/function_{idx}/initial_inputs.npy')
    yf = np.load(f'final_data/function_{idx}/initial_outputs.npy')

    ic(X.shape,Xf.shape)

    if final:
        X =np.vstack((X,Xf))
        # remember y is one dimensional
        y = np.append(y, yf, axis=0)


    if add:
        X_n, y_n = add_points(idx,add )       
        
        X =np.vstack((X,X_n))
        # remember y is one dimensional
        y = np.append(y, y_n, axis=0)

        
    

    return (X,y)

def add_points(idx,add=1):
        y = []
        X = np.array([])


        if add >=1: 
            X1 =  [np.array([0.651, 0.68 ]), np.array([0.7  , 0.926]), np.array([0.493, 0.612, 0.34 ]), np.array([0.578, 0.42 , 0.426, 0.249]), np.array([0.22 , 0.846, 0.879, 0.88 ]), np.array([0.72 , 0.154, 0.73 , 0.693, 0.05 ]), np.array([0.057  , 0.49167, 0.24   , 0.218  , 0.42   , 0.73   ]), np.array([0.0564, 0.0659, 0.0229, 0.0387, 0.403 , 0.801 , 0.488 , 0.89  ])]   
            y1 = [-0.003762575048057693, 0.622924627471964, -0.038428939897216026, -4.049855859138972, 1091.1580176141754, -0.7226851853318268, 1.357713050588125, 9.59862285]
            
            X = np.array( [X1[idx-1]])    
            y.append(y1[(idx-1)])
         
        if add >= 2:  
            X2 = [np.array([0.651, 0.67 ]), np.array([0.7  , 0.826]), np.array([0.242114, 0.1, 0.272433]), np.array([0.57, 0.41, 0.43, 0.3 ]), np.array([0.32 , 0.746, 0.779, 0.78 ]), np.array([0.62, 0.15, 0.83, 0.8 , 0.03]), np.array([0.057  , 0.49167, 0.24, 0.218  , 0.42   , 0.73   ]), np.array([0.0564, 0.0659, 0.0229, 0.4   , 0.503 , 0.601 , 0.588 , 0.9   ])]
            y2 = [-0.0031077063415122937, 0.60224639848784, -0.1344876383977799, -3.754695676825303, 254.36133235195481, -0.6974609336778691, 1.357713050588125, 9.52782054]

            X = np.concatenate((X,[X2[idx-1]]),axis=0)
            y.append(y2[(idx-1)])


        if add >= 3:
            # print("add_points()")
            X3 = [np.array([0.5, 0.5]), np.array([0.5, 0.5]), np.array([0.242114, 0.644074, 0.1     ]), np.array([0.4, 0.3, 0.6, 0.3]), np.array([0.4, 0.4, 0.4, 0.4]), np.array([0.5, 0.5, 0.5, 0.5, 0.5]), np.array([0.1, 0.1, 0.1, 0.1, 0.1, 0.1]), np.array([0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5])]             
            y3 = [2.6752879910742468e-09, 0.6954167327128791, -0.05519878416611015, -5.249135627919266, 93.87841823359997, -1.1518183295888553, 0.0698735633134345, 8.798300000000001]

            X = np.concatenate((X,[X3[idx-1]]),axis=0)
            y.append(y3[(idx-1)])

        # week 4 same as 3  
        if add>=4:
             pass    

        # week 5 same as 3  
        if add>=5:
             pass    
     

        if add >= 6:
            X6 = [np.array([0.001469, 0.997603]), np.array([0.000367, 0.005225]), np.array([0.414221, 0.476798, 0.45518 ]), np.array([0.988374, 0.905999, 0.829899, 0.587374]), np.array([0.727771, 0.667575, 0.365447, 0.635875]), np.array([0.224524, 0.592365, 0.036632, 0.980711, 0.160067]), 
                  np.array([0.012877, 0.734188, 0.82029 , 0.079186, 0.373439, 0.791483]), 
                  np.array([0.130205, 0.216737, 0.148952, 0.175488, 0.54908 , 0.442375,0.283489, 0.67282 ])]
            y6 = [0.0, 0.010727318464766461, -0.0017902770546808788, -34.239644494257874, 30.22866876464311, -1.3118090493245125, 0.45632483932314255, 9.942722150418]

            X = np.concatenate((X,[X6[idx-1]]),axis=0)
            y.append(y6[(idx-1)])

        if add >= 7:
            X7  =  [np.array([0.996882, 0.011774]), np.array([0.312753, 0.851616]), np.array([0.998855, 0.704061, 0.027685]), np.array([0.986992, 0.94847 , 0.736112, 0.609034]), np.array([0.44796 , 0.903575, 0.127788, 0.169839]), np.array([0.001819, 0.959575, 0.030757, 0.019916, 0.95011 ]), np.array([0.426964, 0.350644, 0.818743, 0.938947, 0.471008, 0.740324]), np.array([0.132306, 0.441727, 0.151235, 0.345844, 0.488025, 0.636299,0.108838, 0.574224])] 
            y7 =  [0.0, 0.17541604945781947, -0.07273692389349841, -33.305709431728246, 39.31610002464842, -3.178282994406363, 0.16303160845751472, 9.7891712757689]   
            X = np.concatenate((X,[X7[idx-1]]),axis=0)
            y.append(y7[(idx-1)])

        if add >= 8:
            X8 = [np.array([0.000367, 0.005225]), np.array([0.12214 , 0.031826]), np.array([0.983496, 0.001545, 0.98633 ]), np.array([0.987889, 0.837106, 0.856178, 0.695794]), np.array([0.496921, 0.779008, 0.269521, 0.129492]), np.array([0.001819, 0.959575, 0.030757, 0.019916, 0.95011 ]), np.array([0.014083, 0.783947, 0.254345, 0.278122, 0.454798, 0.17158 ]), np.array([0.061388, 0.174398, 0.144627, 0.311616, 0.580443, 0.12099 ,
       0.22895 , 0.19513 ])]
            y8 = [np.float64(6.2051575364425685e-245), np.float64(-0.009999411985663502), np.float64(-0.43845513351567245), np.float64(-34.542530247822796), np.float64(0.7723600811817056), np.float64(-3.309226038582078), np.float64(0.13793696101376718), np.float64(9.7838419907505)] 

            X = np.concatenate((X,[X8[idx-1]]),axis=0)
            y.append(y8[(idx-1)])


        if add >= 9:
            X9 = [np.array([5.46000e-04, 7.21183e-01]), np.array([0.354506, 0.970611]), np.array([0.989766, 0.929733, 0.995595]), np.array([0.994375, 0.955254, 0.886629, 0.696208]), np.array([0.827452, 0.585675, 0.151086, 0.400371]), np.array([0.001819, 0.959575, 0.030757, 0.019916, 0.95011 ]), np.array([0.289776, 0.00334 , 0.340427, 0.253258, 0.446117, 0.737255]), np.array([0.004768, 0.075287, 0.324064, 0.084006, 0.809979, 0.79131 ,0.229669, 0.740011])]   
             
            y9 = [np.float64(-1.0524002309976889e-186), np.float64(-0.02106200987969565), np.float64(-0.4387220412527796), np.float64(-39.38723527784414), np.float64(15.49459864451037), np.float64(-3.2885927935349915), np.float64(2.040893496878642), np.float64(9.7703098702044)]
             
            X = np.concatenate((X,[X9[idx-1]]),axis=0)
            y.append(y9[(idx-1)])

        if add >= 10:
            X10 =  [np.array([0.281711, 0.997778]), np.array([0.187256, 0.153893]), np.array([0.017902, 0.997712, 0.776588]), np.array([0.96419 , 0.932673, 0.908234, 0.740072]), np.array([0.227669, 0.640884, 0.777733, 0.076647]), np.array([0.147108, 0.94292 , 0.070672, 0.083941, 0.950822]), np.array([0.194058, 0.176859, 0.9708  , 0.37957 , 0.385568, 0.882665]), np.array([0.221161, 0.044377, 0.185963, 0.124843, 0.479279, 0.734442,0.133208, 0.259536])]
            y10 = [np.float64(-1.4671559598093264e-179), np.float64(-0.16127004008105472), np.float64(-0.1337224261791982), np.float64(-39.798813988328114), np.float64(3.6948019834581873), np.float64(-3.015880434703962), np.float64(1.0982125880017948), np.float64(9.8225474119309)]
            X = np.concatenate((X,[X10[idx-1]]),axis=0)
            y.append(y10[(idx-1)])

        if add >= 11:
            X11 = [np.array([0.628982, 0.47094 ]), np.array([0.184758, 0.018406]), np.array([0.547907, 0.831788, 0.460768]), np.array([0.791393, 0.978545, 0.935936, 0.820454]), np.array([0.081432, 0.401261, 0.002011, 0.798007]), np.array([0.001819, 0.959575, 0.030757, 0.019916, 0.95011 ]), np.array([0.009317, 0.351462, 0.541322, 0.855039, 0.883376, 0.565164]), np.array([0.975884, 0.924846, 0.992106, 0.273742, 0.646718, 0.246122,
       0.899852, 0.403664])]
            y11 = [np.float64(1.1008522196705764e-17), np.float64(-0.08202173299121841), np.float64(-0.022619311979697448), np.float64(-38.478848260402934), np.float64(1.1726271113359328), np.float64(-3.2678510484446326), np.float64(0.06475600982032222), np.float64(4.5606336141564014)]
            
            X= np.concatenate((X,[X11[idx-1]]),axis=0)
            y.append(y11[(idx-1)])



        # remember y is 1D    
        y =  np.array(y)  
        
        return X,y 



def print_for_capstone(X):
        for ar in X:
            for a in ar:
                 print(f"{a:6f}-",end="")       
            print()


            
