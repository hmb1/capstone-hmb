import numpy as np

def load_function(idx, add=0):
    X = np.load(f'function_{idx}/initial_inputs.npy')
    y = np.load(f'function_{idx}/initial_outputs.npy')

    if add:
        X_n, y_n = add_points(idx,add )       
        
        X =np.vstack((X,X_n))
        # remember y is one dimensional
        y = np.append(y, y_n, axis=0)

    return (X,y)

def add_points(idx,add=1):
        y = []
        X = np.array([])


        if add >=1: 
            X1 =  [np.array([0.651, 0.68 ]), np.array([0.7  , 0.926]), np.array([0.493, 0.612, 0.34 ]), np.array([0.578, 0.42 , 0.426, 0.249]), np.array([0.22 , 0.846, 0.879, 0.88 ]), np.array([0.72 , 0.154, 0.73 , 0.693, 0.05 ]), np.array([0.057  , 0.49167, 0.24   , 0.218  , 0.42   , 0.73   ]), np.array([0.0564, 0.0659, 0.0229, 0.0387, 0.403 , 0.801 , 0.488 , 0.89  ])]   
            y1 = [-0.003762575048057693, 0.622924627471964, -0.038428939897216026, -4.049855859138972, 1091.1580176141754, -0.7226851853318268, 1.357713050588125, 9.59862285]
            
            X = np.array( [X1[idx-1]])    
            y.append(y1[(idx-1)])
         
        if add >= 2:  
            X2 = [np.array([0.651, 0.67 ]), np.array([0.7  , 0.826]), np.array([0.242114, 0.1, 0.272433]), np.array([0.57, 0.41, 0.43, 0.3 ]), np.array([0.32 , 0.746, 0.779, 0.78 ]), np.array([0.62, 0.15, 0.83, 0.8 , 0.03]), np.array([0.057  , 0.49167, 0.24, 0.218  , 0.42   , 0.73   ]), np.array([0.0564, 0.0659, 0.0229, 0.4   , 0.503 , 0.601 , 0.588 , 0.9   ])]
            y2 = [-0.0031077063415122937, 0.60224639848784, -0.1344876383977799, -3.754695676825303, 254.36133235195481, -0.6974609336778691, 1.357713050588125, 9.52782054]

            X = np.concatenate((X,[X2[idx-1]]),axis=0)
            y.append(y2[(idx-1)])


        if add >= 3:
            # print("add_points()")
            X3 = [np.array([0.5, 0.5]), np.array([0.5, 0.5]), np.array([0.242114, 0.644074, 0.1     ]), np.array([0.4, 0.3, 0.6, 0.3]), np.array([0.4, 0.4, 0.4, 0.4]), np.array([0.5, 0.5, 0.5, 0.5, 0.5]), np.array([0.1, 0.1, 0.1, 0.1, 0.1, 0.1]), np.array([0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5])]             
            y3 = [2.6752879910742468e-09, 0.6954167327128791, -0.05519878416611015, -5.249135627919266, 93.87841823359997, -1.1518183295888553, 0.0698735633134345, 8.798300000000001]

            X = np.concatenate((X,[X3[idx-1]]),axis=0)
            y.append(y3[(idx-1)])


        if add >= 4:
             
            X4 = [np.array([0.001469, 0.997603]), np.array([0.000367, 0.005225]), np.array([0.414221, 0.476798, 0.45518 ]), np.array([0.988374, 0.905999, 0.829899, 0.587374]), np.array([0.727771, 0.667575, 0.365447, 0.635875]), np.array([0.224524, 0.592365, 0.036632, 0.980711, 0.160067]), 
                  np.array([0.012877, 0.734188, 0.82029 , 0.079186, 0.373439, 0.791483]), 
                  np.array([0.130205, 0.216737, 0.148952, 0.175488, 0.54908 , 0.442375,0.283489, 0.67282 ])]
            y4 = [0.0, 0.010727318464766461, -0.0017902770546808788, -34.239644494257874, 30.22866876464311, -1.3118090493245125, 0.45632483932314255, 9.942722150418]

            X = np.concatenate((X,[X4[idx-1]]),axis=0)
            y.append(y4[(idx-1)])






        # remember y is 1D    
        y =  np.array(y)  
        
        return X,y 



def print_for_capstone():
        X4  = [np.array([0.001469006142370222, 0.9976027499916044]),                          
               np.array([0.00036734375145786047, 0.005225104737947462]),                           
               np.array([0.4142210500958916, 0.47679831977223863, 0.45518038913779724]),  
               np.array([0.9883738380592264, 0.9059989949325632, 0.829899059222762, 0.5873737506385249]),    # 4
               np.array([0.7277712732144181, 0.667574500517014, 0.36544699719012125, 0.6358746605355162]),  #5
               np.array([0.2245238664931019, 0.5923650719845006, 0.03663195033674938, 0.9807105485297618, 0.1600672198474629]),  # 6
               np.array([0.012877261910938968, 0.7341880622680185, 0.8202897275605, 0.07918568219174739, 0.3734391126466374, 0.7914832369684477]), 
               np.array([0.13020496221070257, 0.21673747560879691, 0.14895170636719327, 0.1754880807967786, 0.5490802856432188, 0.4423748574983052, 0.28348936343641135, 0.6728204205630476])]
        for ar in X4:
            for a in ar:
                 print(f"{a:6f}-",end="")       
            print()
